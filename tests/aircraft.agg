# test file for parametrically specified generic aircraft
#
# syntax:
#
# global block contains parameter declarations
#
# distribution block(s) contain(s) description of geometry as
# parameterized patches
#

global {
  # syntax: <identifier> = <constant>
  # fuselage diameter
  D = 2.0
  # cabin length
  lenc = 8.0
  # nose length
  lenn = 1.5
  # tail length
  lent = 2.5
  # wing semispan
  semispan = 4.5
  # wing chord
  chord = 2
  ## wing leading edge
  wle = 3
  
# syntax: <identifier> = "<expression>" (quotes required)
  n1 = 0.5
  n2 = 0.5
}

# syntax: distribution("name", tmin, tmax, nt, sg, sm, ss)
#
#   name: name of surface, in quotes
#   tmin: minimum of parameter t on surface patch
#   tmax: maximum of parameter t on surface patch
#     nt: number of steps in t between tmin and tmax
#     sg: spacing in t in generating geometry
#     sm: spacing in t in generating mesh
#     ss: spacing in parameter s in generating cross-section shape

#distribution ("front", 0.0, 1.0, 8, "linear", "linear", "cosine")

#{
## syntax: transform("transform", parameters ...)
#  transform("shift", -0.5, 0, "l1*t")
#  transform("scale", "D")

## syntax: shape("curve", parameters ...)
##  curve: "ellipse"  (closed smooth curve)
##  curve: "aerofoil" (aerofoil type shape)
#  shape("ellipse", -1.0, hu, n1, n2)
#}

body("fuselage") {

  grid(16384, 32768)
  {
    tube(33, 33)
  }

  distribution ("cabin", 0.0, 1, 16, "cosine")
  {
    transform("shift", -0.5, 0, 0)
    transform("scale", "2*D") 
    transform("shift", 0, 0, "s*lenc")
    shape("ellipse", -1.0, 1,"n1", "n2")
  }
}


body("nose") {

  grid(16384, 32768)
  {
    hemispherical(2)
  }

  distribution ("nose", 0.0, 1, 2, "cosine")
  {
    ## this needs some non-linear transformation to give it a cockpit shape
    transform("shrink", "0.5", 0, "sqrt(1-s)*(1.5-0.5*(1-s))")
    transform("shift", -0.5, 0, 0)
    transform("scale", "2*D")
    transform("shift", 0, 0, "-s*lenn")
    shape("ellipse", -1, 1, "n1", "n2")
  }

}

body("tail") {

  grid(16384, 32768)
  {
    hemispherical(2)
  }

  distribution ("tail", 0.0, 1, 16, "cosine")
  {
    ## this needs some non-linear transformation to make it a tail cone
    transform("shrink", "0.5", 0, "sqrt(1-s)*(1.5-0.5*(1-s))")
    transform("shift", -0.5, 0, 0)
    transform("scale", "2*D")
    transform("shift", 0, 0, "lenc + s*lent")
    shape("ellipse", -1, 1, "n1", "n2")
  }

}

body("leftwing") {
  grid(16384, 32768)
  {
    hemispherical(3)
  }

 distribution("leftwing", 0.0, 0.9, 24, "cosine")

## argument list:
##   distribution label (for readability)
##   tmin, tmax: parameter range
##   number of sections to be generated for interpolation of shape
##   section spacing for geometry

{
  axes("zyx")
  transform("shrink", 0.5, 0.0, "tipright(0.5, 0.9, s)") ;
  transform("rotate", 0.5, 0.0, "0.0*s")
  transform("scale", "chord")
  transform("shift", "wle", 0.0, "2*s*semispan")

  shape("enaca", 4, 0.12, 0.0, 0.0) ;
 ## shape("ellipse", -0.2, 0.2, n1, n2) ;  
}
 
distribution("ltip", 0.9, 1.0, 8, "cosine")

{
  axes("zyx")
  transform("shrink", 0.5, 0.0, "tipright(0.5, 0.9, s)") ;
  transform("rotate", 0.5, 0.0, "0.0*s")
  transform("scale", "chord")
  transform("shift", "wle", 0.0, "2*s*semispan")

  shape("enaca", 4, 0.12, 0.0, 0.0) ;
  ##shape("ellipse", -0.2, 0.2, n1, n2) ;  
}

}