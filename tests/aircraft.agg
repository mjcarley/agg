# test file for parametrically specified generic aircraft
#
# syntax:
#
# global block contains parameter declarations
#
# distribution block(s) contain(s) description of geometry as
# parameterized patches
#

global {
# syntax: <identifier> = <constant>
  l1 = 3.0
  lr = 1.5
  l2 = 3.0
  span = 1
  lt = 1
# syntax: <identifier> = "<expression>" (quotes required)
  len = "l1+lr+l2"
  D = "len*0.25"
  hu = 1.3
  tlen = 3.0
  nlen = 2.5
  n1 = 0.5
  n2 = 0.5
}

# syntax: distribution("name", tmin, tmax, nt, sg, sm, ss)
#
#   name: name of surface, in quotes
#   tmin: minimum of parameter t on surface patch
#   tmax: maximum of parameter t on surface patch
#     nt: number of steps in t between tmin and tmax
#     sg: spacing in t in generating geometry
#     sm: spacing in t in generating mesh
#     ss: spacing in parameter s in generating cross-section shape

#distribution ("front", 0.0, 1.0, 8, "linear", "linear", "cosine")

#{
## syntax: transform("transform", parameters ...)
#  transform("shift", -0.5, 0, "l1*t")
#  transform("scale", "D")

## syntax: shape("curve", parameters ...)
##  curve: "ellipse"  (closed smooth curve)
##  curve: "aerofoil" (aerofoil type shape)
#  shape("ellipse", -1.0, hu, n1, n2)
#}

#distribution ("root", 0.0, 1.0, 8, "linear", "linear", "cosine")

#{
# syntax: transform("transform", parameters ...)
#  transform("shrink", 0.5, 0, "1.0+0.4*sqrt(s*(1-s))")
#  transform("shift", -0.5, 0, "l1+lr*s")
#  transform("scale", "D")
## n1, n2, main height, shoulder breakaway, displacement, height
#  shape("root", 0.5, 0.5,
#    		hu, 0.45, "0.2*sqrt(s*(1-s))", "0.2*sqrt(s*(1-s))",
#		-1, 0.45, "0.2*sqrt(s*(1-s))", "-0.2*sqrt(s*(1-s))",
#		16)
#}

grid(16384, 32768)
{
spherical(3)
}

distribution ("rear", 0.1, 0.9, 8, "cosine")

{
## syntax: transform("transform", parameters ...)
  transform("shift", -0.5, 0, "l1+lr+l2*(s-0.1)/0.8")
  transform("scale", "D")

  shape("ellipse", -1.0, 1, n1, n2)
}

distribution ("nose", 0.0, 0.1, 16, "cosine")
{
  transform("shrink", "0.5", 0, "sqrt(1.0-(s/0.1)^2)")
  transform("shift", -0.5, 0, "-(s/0.1)*nlen")
  transform("scale", "D") 
  shape("ellipse", 1.0, hu, "n1 + (0.5-n1)*s/0.1", "n2 + (0.5-n2)*s/0.1")
}

distribution ("tail", 0.9, 1.0, 8, "cosine")
{
  transform("shrink", 0.5, "hu*0.5^n1*0.5^n2", "(1.0-(s-0.9)/0.1)")
  transform("scale", "D") 
  transform("shift", -0.5, 0, "len+(s-0.9)/0.1*tlen")
  shape("ellipse", 1.0, hu, n1, n2) ;
}

#distribution("rwing", 0.0, 1, 8, "cosine", "cosine", "cosine")
#{
  ## transformation between local and global coordinate systems
#  axes("zyx")
#  transform("shrink", 0.0, 0, "lr + t*(lt-lr)")
#  transform("shift", "l1+3*t", "t", "D/2+0.1+t*span")
#  shape("ellipse", 0.1, 0.1, n1, n2) ;  
#}

#distribution("lwing", 0.0, 1, 8, "cosine", "cosine", "cosine")

#{
#  axes("-zyx")
#  transform("shrink", 0.0, 0, "lr + t*(lt-lr)")
#  transform("shift", "l1+0.5*t", "0.1*t", "D/2+0.3+t*span")
#  shape("ellipse", -0.2, 0.2, n1, n2) ;  
#}
