# test file for parametrically specified generic aircraft
#
# syntax:
#
# global block contains parameter declarations
#
# distribution block(s) contain(s) description of geometry as
# parameterized patches
#

global {
# syntax: <identifier> = <constant>
  l1 = 3.0
  lr = 1.5
  l2 = 3.0
  span = 5
  lt = 0.2
# syntax: <identifier> = "<expression>" (quotes required)
  len = "l1+lr+l2"
  D = 0
  ##  D = "len*0.2"
  hu = 2.0 
  tlen = 3.0
  nlen = 2.5
  n1 = 0.5
  n2 = 0.5
}

distribution("lwing", 0.1, 0.9, 24, 4, 17, "cosine", "linear", "cosine")

## argument list:
##   distribution label (for readability)
##   tmin, tmax: parameter range
##   number of sections to be generated for interpolation of shape
##   number of sections on distribution when meshing
##   number of nodes per section when meshing
##   point spacing for geometry and mesh generation

{
  axes("-zyx")
   ##transform("shrink2", 0.0, 0, "lr + t*(lt-lr)", "(1-t)^0.25") ;
   ##"(lr + t*(lt-lr))*(1-t)^0.1")
   ##  transform("scale", "(1-t)^0.1")
   ##  transform("shift", "l1+0.5*t", "0.1*t", "D/2+0.3+t*span")
   transform("shrink", 0.5, 0.0, "tipright(0.5, 0.9, t)") ;
  transform("rotate", 0.5, 0.0, "0.0*t")
  ##transform("scale", "lr + t*(lt-lr)")
  transform("shift", "0", 0.0, "D/2+t*span")

  ##transform("shift", "l1+t*1.1*lr", 0.0, "D/2+t*span")
  ##shape("naca", -0.2, 0.2, n1, n2) ;    
  shape("ellipse", -0.2, 0.2, n1, n2) ;  
}

distribution("ltip", 0.9, 1.0, 24, 8, 33, "cosine", "halfsin", "cosine")

{
  axes("-zyx")
  transform("shrink", 0.5, 0.0, "tipright(0.5, 0.9, t)") ;
  transform("rotate", 0.5, 0.0, "0.0*t")
  transform("shift", "0", 0.0, "D/2+t*span")

  shape("ellipse", -0.2, 0.2, n1, n2) ;  
}


distribution("rtip", 0.1, 0.0, 4, 8, 33, "cosine", "halfsin", "cosine")

{
  invert
  axes("-zyx")
  transform("shrink", 0.5, 0.0, "tipleft(0.5, 0.1, t)") ;
  transform("rotate", 0.5, 0.0, "0.0*t")
  transform("shift", "0", 0.0, "D/2+t*span")

  shape("ellipse", -0.2, 0.2, n1, n2) ;  
}
